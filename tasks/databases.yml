---
# tasks/databases.yml

- name: ocStore | Deploy | Ensure databases are present
  mysql_db:
    name: "{{ item.name }}"
    collation: "{{ item.collation | default('utf8_general_ci') }}"
    encoding: "{{ item.encoding | default('utf8') }}"
    state: present
  with_items: "{{ ocstore_mysql_databases }}"
  register: ocstore_databases_state

- name: ocStore | Deploy | Ensure database users are present
  mysql_user:
    name: "{{ item.name }}"
    host: "{{ item.host | default('localhost') }}"
    password: "{{ item.password }}"
    priv: "{{ item.priv | default('*.*:USAGE') }}"
    state: "{{ item.state | default('present') }}"
    append_privs: "{{ item.append_privs | default('no') }}"
  with_items: "{{ ocstore_mysql_users }}"

- name: ocStore | Deploy | Ensure database script is up to date
  template: >
    src="sql/setup.sql.j2"
    dest="~/setup.sql"
    mode="644"
  when: ocstore_databases_state.changed
#  changed_when: False

- name: ocStore | Deploy | Iterate over newly created databases
  include_tasks: import.yml
  when: db_item.changed and not db_item.failed
  with_items: 
    - "{{ ocstore_databases_state.results }}"
  loop_control:
    loop_var: db_item

#- name: ocStore | Deploy | Shred database script
#  command: "shred -f ~/setup.sql"
#  changed_when: False
  
#- name: ocStore | Deploy | Delete database script
#  file:
#    path: "~/setup.sql"
#    state: "absent"
