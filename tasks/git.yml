---
# tasks/git.yml

- name: ocStore | Deploy | Update remote repository
  git:
    repo: "{{ ocstore_git_repo }}"
    dest: "{{ ocstore_www_root }}/{{ ocstore_repo_dir }}"
    version: "{{ ocstore_git_branch }}"
    accept_hostkey: "yes"
    update: "yes"
    force: "yes"
    refspec: "{{ ocstore_git_refspec | default(omit) }}"
  register: ocstore_git_result

- name: ocStore | Deploy | Set current release version
  set_fact:
    ocstore_current_release_version: "{{ ocstore_git_result.after[:7] }}.{{ lookup('pipe', 'date -u +%Y%m%d%H%M') }}"

- name: ocStore | Deploy | Set current release folder
  set_fact:
    ocstore_current_release_dir: "{{ ocstore_www_root }}/{{ ocstore_releases_dir + '/' + ocstore_current_release_version }}"
  
- name: ocStore | Deploy | Ensure current release folders are exist
  file:
    state: "directory"
    path: "{{ item }}"
    mode: "750"
    owner: "{{ ocstore_www_owner_user }}"
    group: "{{ ocstore_www_owner_group }}"
  with_items:
    - "{{ ocstore_current_release_dir }}"
    - "{{ ocstore_current_release_dir }}/{{ ocstore_admin_dir }}"
    - "{{ ocstore_current_release_dir }}/{{ ocstore_public_dir }}"
    - "{{ ocstore_current_release_dir }}/{{ ocstore_shared_dir }}"
  become: yes

- name: ocStore | Deploy | Copy current release version into REVISION file
  copy:
    content: "{{ ocstore_git_result.after }}"
    dest: "{{ ocstore_current_release_dir }}/REVISION"
    mode: "600"
    group: "{{ ocstore_www_owner_user }}"
    owner: "{{ ocstore_www_owner_user }}"
  become: yes

- name: ocStore | Deploy | Sync repo admin subtree to admin folder
  shell: >-
           {
             git ls-files -z --with-tree="{{ ocstore_git_branch }}" | tr '\0' '\n';
             git submodule foreach --recursive --quiet 'git ls-files -z --with-tree="$sha1" | tr "\0" "\n" | sed "s#^#$path/#"';
           }
           | grep "^$prefix"
           | sed "s#^$prefix/##"
           | rsync -a --exclude index.html --files-from=- "./$prefix/" {{ ocstore_current_release_dir }}/{{ ocstore_admin_dir }}/
  args:
    chdir: "{{ ocstore_www_root }}/{{ ocstore_repo_dir }}/"
  environment:
    prefix: "{{ ocstore_git_tree_admin }}"

- name: ocStore | Deploy | Sync repo public subtree to release folder
  shell: >-
           {
             git ls-files -z --with-tree="{{ ocstore_git_branch }}" | tr '\0' '\n';
             git submodule foreach --recursive --quiet 'git ls-files -z --with-tree="$sha1" | tr "\0" "\n" | sed "s#^#$path/#"';
           }
           | grep "^$prefix"
           | sed "s#^$prefix/##"
           | rsync -a --exclude index.html --files-from=- "./$prefix/" {{ ocstore_current_release_dir }}/{{ ocstore_public_dir }}/
  args:
    chdir: "{{ ocstore_www_root }}/{{ ocstore_repo_dir }}/"
  environment:
    prefix: "{{ ocstore_git_tree_public }}"

- name: ocStore | Deploy | Sync repo shared subtree to shared folder if not exists
  shell: >-
           {
             git ls-files -z --with-tree="{{ ocstore_git_branch }}" | tr '\0' '\n';
             git submodule foreach --recursive --quiet 'git ls-files -z --with-tree="$sha1" | tr "\0" "\n" | sed "s#^#$path/#"';
           }
           | grep "^$prefix"
           | sed "s#^$prefix/##"
           | rsync -a --exclude index.html --files-from=- "./$prefix/" {{ ocstore_www_root }}/{{ ocstore_shared_dir }}/
  args:
    chdir: "{{ ocstore_www_root }}/{{ ocstore_repo_dir }}/"
  environment:
    prefix: "{{ ocstore_git_tree_shared }}"
  when: ocstore_shared_path.stat.isdir is not defined or not ocstore_shared_path.stat.isdir
